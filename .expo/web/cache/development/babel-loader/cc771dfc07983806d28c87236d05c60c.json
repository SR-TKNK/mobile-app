{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\hocnhieuchut\\\\reactnative\\\\mobile-app\\\\screens\\\\OrderScreens\\\\OrderDetails.js\";\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ViewProductOrder from \"../../components/Products/ViewProductOrder\";\nvar currentLocation = \"http://192.168.1.103:3000/api\";\nexport default function OrderDetails(_ref) {\n  var route = _ref.route;\n  var order = route.params.order;\n  console.log(order);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      total = _useState2[0],\n      setTotal = _useState2[1];\n\n  function getTotal(products) {\n    var sum = 0;\n\n    for (var i in products) {\n      sum += products[i].quantity * products[i].price;\n    }\n\n    setTotal(sum);\n  }\n\n  ;\n  useEffect(function () {\n    getTotal(order.products);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 16\n  },\n  title: {\n    fontWeight: 'bold'\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 8\n  }\n});","map":{"version":3,"sources":["C:/Users/PC/Documents/hocnhieuchut/reactnative/mobile-app/screens/OrderScreens/OrderDetails.js"],"names":["axios","React","useEffect","useState","ViewProductOrder","currentLocation","OrderDetails","route","order","params","console","log","total","setTotal","getTotal","products","sum","i","quantity","price","styles","container","StyleSheet","create","flex","backgroundColor","padding","title","fontWeight","row","flexDirection","marginTop"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAEA,OAAOC,gBAAP;AAEA,IAAMC,eAAe,GAAG,+BAAxB;AAEA,eAAe,SAASC,YAAT,OAAiC;AAAA,MAATC,KAAS,QAATA,KAAS;AAC9C,MAAQC,KAAR,GAAkBD,KAAK,CAACE,MAAxB,CAAQD,KAAR;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,kBAA0BL,QAAQ,EAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AAEA,WAASC,QAAT,CAAkBC,QAAlB,EAA4B;AAC1B,QAAIC,GAAG,GAAG,CAAV;;AACA,SAAK,IAAMC,CAAX,IAAgBF,QAAhB,EAA0B;AACxBC,MAAAA,GAAG,IAAID,QAAQ,CAACE,CAAD,CAAR,CAAYC,QAAZ,GAAuBH,QAAQ,CAACE,CAAD,CAAR,CAAYE,KAA1C;AACD;;AACDN,IAAAA,QAAQ,CAACG,GAAD,CAAR;AACD;;AAAA;AAEDd,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,QAAQ,CAACN,KAAK,CAACO,QAAP,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA8BD;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,OAAO,EAAE;AAHA,GADoB;AAM/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE;AADP,GANwB;AAS/BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,aAAa,EAAE,KADZ;AAEHC,IAAAA,SAAS,EAAE;AAFR;AAT0B,CAAlB,CAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FlatList, View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport ViewProductOrder from '../../components/Products/ViewProductOrder';\r\n\r\nconst currentLocation = \"http://192.168.1.103:3000/api\";\r\n\r\nexport default function OrderDetails({ route }) {\r\n  const { order } = route.params;\r\n  console.log(order);\r\n  const [total, setTotal] = useState();\r\n\r\n  function getTotal(products) {\r\n    let sum = 0;\r\n    for (const i in products) {\r\n      sum += products[i].quantity * products[i].price;\r\n    }\r\n    setTotal(sum);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTotal(order.products);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* <ScrollView>\r\n        <View>\r\n          <Text style={styles.title}>Thông tin khách hàng</Text>\r\n          <Text>Họ và tên: {order.user.name}</Text>\r\n          <Text>Số điện thoại: {order.user.number}</Text>\r\n          <Text>Địa chỉ: {order.user.address}</Text>\r\n        </View>\r\n        <View style={styles.row}>\r\n          <Text style={styles.title}>Trạng thái đơn hàng: </Text>\r\n          <Text>{order.status}</Text>\r\n        </View>\r\n        <View style={styles.row}>\r\n          <Text style={styles.title}>Sản phẩm</Text>\r\n          <FlatList\r\n            data={order.products}\r\n            renderItem={({ item }) =>\r\n              <ViewProductOrder product={item} />\r\n            }\r\n            keyExtractor={item => `${item.id}`}\r\n          />\r\n        </View>\r\n        <View style={styles.row}>\r\n          <Text style={styles.title}>Thành tiền:</Text>\r\n          <Text>{total}</Text>\r\n        </View>\r\n      </ScrollView> */}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    padding: 16\r\n  },\r\n  title: {\r\n    fontWeight: 'bold'\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 8\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}